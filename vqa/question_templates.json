{
    "static":{
        "localization":{
            "text": [
                "Locate all <o>. Give me the bounding boxes expressed in our coordinates.",
                "Give me the bounding boxes of all <o> in our coordinates.",
                "Please localize all <o>. Give me the bounding boxes expressed in our coordinates.",
                "Locate all <o> immediately. Give me the bounding boxes expressed in our coordinates.",
                "Identify the positions of all <o>. Give me the bounding boxes expressed in our coordinates.",
                "Pinpoint the whereabouts of all <o>. Give me the bounding boxes expressed in our coordinates.",
                "Determine the positions of all <o>. Give me the bounding boxes expressed in our coordinates.",
                "Find and report the locations of all <o>. Give me the bounding boxes expressed in our coordinates."
            ],
            "params":[
                "<o>"
            ],
            "end_filter":"locate",
            "constraint":[]
        },
        "counting": {
            "text":[
                "How many <o> are observed?",
                "How many <o> are there in observation?",
                "Give me the number of <o>.",
                "Count the number of observed <o>.",
                "Determine how many <o> are observed.",
                "Record the quantity of <o>."
            ],
            "params":[
                "<o>"
            ],
            "end_filter":"count",
            "constraint":[]
        },
        "count_equal_binary":{
            "text":[
                "Are there an equal number of the following things: <o1>, <o2>? Answer True or False.",
                "Do we have the same number of <o1> and <o2>? Answer True or False.",
                "Do <o1> match <o2> in number? Answer True or False.",
                "Are the quantities of <o1> and <o2> equal? Answer True or False.",
                "Determine if <o1> and <o2> are equal in number. Answer True or False.",
                "Check if the quantities of <o1> and <o2> are the same. Answer True or False."
            ],
            "params":[
                "<o1>","<o2>"
            ],
            "end_filter":"count_equal",
            "constraint":[]
        },
        "count_more_binary":{
            "text":[
                "Are there more <o1> than <o2>? Answer True or False.",
                "Does <o1> exceed <o2> in quantity? Answer True or False.",
                "Are there less <o2> than <o1>? Answer True or False.",
                "Are <o2> outnumbered by <o1>? Answer True or False.",
                "Determine if there are more <o1> than <o2>. Answer True or False.",
                "Answer True if <o1> outnumber <o2> and False otherwise."
            ],
            "params":[
                "<o1>","<o2>"
            ],
            "end_filter":"count_more",
            "constraint":[]
        },
        "color_identification": {
            "text": [
                "What colors are observed for <o>?",
                "What are the observed colors of <o>?",
                "Which colors can be seen in <o>?",
                "Which colors are associated with <o>?",
                "Find the colors for <o>.",
                "Describe the colors of <o>.",
                "Identify the colors seen on <o>.",
                "Specify the colors associated with <o>."
            ],
            "params": [
                "<o>"
            ],
            "end_filter": "extract_color",
            "constraint": ["no_color"]
        },
        "type_identification": {
            "text": [
                "What types of <o> are observable?",
                "For <o>, what are their types?",
                "What types do <o> fall into?",
                "Can you list the types of <o>?",
                "Name the types of <o>.",
                "Identify the types of <o>.",
                "List the types of <o>.",
                "State the categories of <o>."
            ],
            "params": [
                "<o>"
            ],
            "end_filter": "extract_type",
            "constraint": ["no_type"]
        },
        "color_identification_unique": {
            "text": [
                "What's the color for <o>?",
                "What's the color of <o>?",
                "Which color can be seen for <o>?",
                "Which color is associated with <o>?",
                "Find the color for <o>.",
                "Describe the color of <o>.",
                "Identify the color seen on <o>.",
                "Specify the color associated with <o>."
            ],
            "params": [
                "<o>"
            ],
            "end_filter": "extract_color_unique",
            "constraint": ["no_color","unique"]
        },
        "type_identification_unique": {
            "text": [
                "For <o>, what is its type?",
                "What type does <o> fall into?",
                "Name the type of <o>.",
                "Identify the type of <o>.",
                "State the category of <o>."
            ],
            "params": [
                "<o>"
            ],
            "end_filter": "extract_type_unique",
            "constraint": ["no_type", "unique"]
        }
    },
    "dynamic": {
        "localization":{
            "text": [
                "Locate all <o>. Give me the bounding boxes expressed in our coordinates at this moment.",
                "Give me the bounding boxes of all <o> in our coordinates.",
                "Please localize all <o>. Give me the bounding boxes expressed in our coordinates at this moment.",
                "Locate all <o> immediately. Give me the bounding boxes expressed in our coordinates at this moment.",
                "Identify the positions of all <o>. Give me the bounding boxes expressed in our coordinates at this moment.",
                "Pinpoint the whereabouts of all <o>. Give me the bounding boxes expressed in our coordinates at this moment.",
                "Determine the positions of all <o>. Give me the bounding boxes expressed in our coordinates at this moment.",
                "Find and report the locations of all <o>. Give me the bounding boxes expressed in our coordinates at this moment."
            ],
            "params":[
                "<o>"
            ],
            "end_filter":"locate",
            "constraint":[]
        },
        "counting": {
            "text":[
                "At this moment, how many <o> are observed?",
                "At this moment, how many <o> are there in observation?",
                "Give me the number of <o> at this moment.",
                "Count the number of observed <o> at current moment.",
                "Determine how many <o> are observed at current moment.",
                "Record the quantity of <o> at current moment."
            ],
            "params":[
                "<o>"
            ],
            "end_filter":"count",
            "constraint":[]
        },
        "count_equal_binary":{
            "text":[
                "At this moment, are there an equal number of the following things: <o1>, <o2>? Answer True or False.",
                "At this moment, do we have the same number of <o1> and <o2>? Answer True or False.",
                "At this moment, do <o1> match <o2> in number? Answer True or False.",
                "Determine if <o1> and <o2> are equal in number at this moment. Answer True or False.",
                "Check if the quantities of <o1> and <o2> are the same at this moment. Answer True or False."
            ],
            "params":[
                "<o1>","<o2>"
            ],
            "end_filter":"count_equal",
            "constraint":[]
        },
        "count_more_binary":{
            "text":[
                "Are there more <o1> than <o2>? Answer True or False.",
                "Does <o1> exceed <o2> in quantity? Answer True or False.",
                "Are there less <o2> than <o1>? Answer True or False.",
                "Are <o2> outnumbered by <o1>? Answer True or False.",
                "Determine if there are more <o1> than <o2>. Answer True or False.",
                "Answer True if <o1> outnumber <o2> and False otherwise."
            ],
            "params":[
                "<o1>","<o2>"
            ],
            "end_filter":"count_more",
            "constraint":[]
        },
        "color_identification": {
            "text": [
                "What colors are observed for <o>?",
                "What are the observed colors of <o>?",
                "Which colors can be seen in <o>?",
                "Which colors are associated with <o>?",
                "Find the colors for <o>.",
                "Describe the colors of <o>.",
                "Identify the colors seen on <o>.",
                "Specify the colors associated with <o>."
            ],
            "params": [
                "<o>"
            ],
            "end_filter": "extract_color",
            "constraint": ["no_color"]
        },
        "type_identification": {
            "text": [
                "What types of <o> are observable?",
                "For <o>, what are their types?",
                "What types do <o> fall into?",
                "Can you list the types of <o>?",
                "Name the types of <o>.",
                "Identify the types of <o>.",
                "List the types of <o>.",
                "State the categories of <o>."
            ],
            "params": [
                "<o>"
            ],
            "end_filter": "extract_type",
            "constraint": ["no_type"]
        },
        "color_identification_unique": {
            "text": [
                "What's the color for <o>?",
                "What's the color of <o>?",
                "Which color can be seen for <o>?",
                "Which color is associated with <o>?",
                "Find the color for <o>.",
                "Describe the color of <o>.",
                "Identify the color seen on <o>.",
                "Specify the color associated with <o>."
            ],
            "params": [
                "<o>"
            ],
            "end_filter": "extract_color_unique",
            "constraint": ["no_color","unique"]
        },
        "type_identification_unique": {
            "text": [
                "For <o>, what is its type?",
                "What type does <o> fall into?",
                "Name the type of <o>.",
                "Identify the type of <o>.",
                "State the category of <o>."
            ],
            "params": [
                "<o>"
            ],
            "end_filter": "extract_type_unique",
            "constraint": ["no_type", "unique"]
        },
        "identify_stationary": {
            "text": [
                "Given the past observations, is <o> stationary?",
                "Given the past observations, is <o> parked?",
                "Is <o> not moving?"
            ],
            "params": [
                "<o>"
            ],
            "end_filter": "is_stationary",
            "constraint": [
                "unique", "no_state"
            ]
        },
        "identify_turning": {
            "text": [
                "Did <o> turn?"
            ],
            "params": [
                "<o>"
            ],
            "end_filter": "is_turning",
            "constraint": [
                "unique", "no_state"
            ]
        },
        "identify_acceleration": {
            "text": [
                "Did <o> accelerated?"
            ],
            "params": [
                "<o>"
            ],
            "end_filter": "accelerated",
            "constraint": [
                "unique", "no_state"
            ]
        },
        "identify_speed": {
            "text":[
                "What's the current speed of <o>?"
            ],
            "params":[
                "<o>"
            ],
            "end_filter":"identify_speed",
            "constraint":[
                "unique"
            ]
        },
        "identify_heading":{
            "text":[
                "Using our current coordinate, what's the heading of <o> in clock position?"
            ],
            "params":[
                "<o>"
            ],
            "end_filter":"identify_heading",
            "constraint":[
                "unique"
            ]
        },
        "identify_head_toward": {
            "text":[
                "Is <o> heading toward us?"
            ],
            "params":[
                "<o>"
            ],
            "end_filter":"identify_head_toward",
            "constraint":[
                "unique", "no_state"
            ]
        },
        "predict_trajectory": {
            "text": [
                "Using our current coordinates, predict the trajectory of <o> in the next 0.5 seconds for 5 times."
            ],
            "params": [
                "<o>"
            ],
            "end_filter": "predict_trajectory",
            "constraint": [
                "unique"
            ]
        }
    },
    "safety": {
        "predict_collision": {
            "text":[
                "Given the past observation, is collision likely to happen?"
            ],
            "params":[
            ],
            "end_filter":"predict_collision",
            "constraint":[]
        },
        "counterfactual_trajectory": {
            "text":[
                "We observed from time t=0 to t=<tnow>. Suppose we started moving along <traj> at t=<t>; can we avoid the collision? The trajectory uses our current frame as the reference."
            ],
            "params": [
                "<traj>", "<t>", "<tnow>"
            ],
            "end_filter":"blame_collision",
            "constraint":[]
        },
        "stop_safe": {
            "text": [
                "We observed from time t=0 to t=<tnow>. Will there be any collision if we stopped completely at time <t>?"
            ],
            "params":[
                "<t>", "<tnow>"
            ],
            "end_filter":"counterfactual_stop",
            "constraint":[]
        },
        "move_around": {
            "text": [
                "We observed from time t=0 to t=<tnow>. If we were <d> away from where we are now, would there be any collision?"
            ],
            "params": [
                "<d>", "<tnow>"
            ],
            "end_filter": "counterfactual_displacement",
            "constraint": []
        }
    }
}