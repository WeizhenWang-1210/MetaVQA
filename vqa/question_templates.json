{
    "generic":{
        "localization":{
            "text": [
                "Locate the <o>.",
                "Give me the bounding box of <o>.",
                "Please localize the <o>.",
                "Locate the <o> immediately.",
                "Identify the position of the <o>.",
                "Pinpoint the whereabouts of the <o>.",
                "Determine the position of the <o>.",
                "Find and report the location of the <o>."
            ],
            "params":[
                "<o>"
            ],
            "end_filter":"locate",
            "constraint":[]
        },
        "counting": {
            "text":[
                "How many <o> are observed?",
                "How many <o> are there in observation?",
                "Give me the number of <o>.",
                "Count the number of observed <o>.",
                "Determine how many <o> are observed.",
                "Record the quantity of <o> observed."
            ],
            "params":[
                "<o>"
            ],
            "end_filter":"count",
            "constraint":[]
        },
        "count_equal_binary":{
            "text":[
                "Are there an equal number of the following things: <o1>,<o2>?. Answer True or False",
                "Do we have the same number of <o1> and <o2>?. Answer True or False",
                "Do <o1> match <o2> in number?. Answer True or False",
                "Are the quantities of <o1> and <o2> equal?. Answer True or False",
                "Determine if <o1> and <o2> are equal in number. Answer True or False",
                "Check if the quantities of <o1> and <o2> are the same. Answer True or False"
            ],
            "params":[
                "<o1>","<o2>"
            ],
            "end_filter":"count_equal",
            "constraint":[]
        },
        "count_more_binary":{
            "text":[
                "Are there more <o1> than <o2>? Answer True or False",
                "Does <o1> exceed <o2> in quantity? Answer True or False",
                "Are there less <o2> than <o1>? Answer True or False",
                "Are <o2> outnumbered by <o1>? Answer True or False",
                "Determine if there are more <o1> than <o2>. Answer True or False",
                "Answer True if <o1> outnumber <o2> and False otherwise."
            ],
            "params":[
                "<o1>","<o2>"
            ],
            "end_filter":"count_more",
            "constraint":[]
        },
        "color_identification": {
            "text": [
                "What colors are observed for <o>?",
                "What are the observed colors of <o>?",
                "Which colors can be seen in <o>?",
                "Which colors are associated with <o>?",
                "Find the colors for <o>.",
                "Describe the colors of <o>.",
                "Identify the colors seen on <o>.",
                "Specify the colors associated with <o>."
            ],
            "params": [
                "<o>"
            ],
            "end_filter": "extract_color",
            "constraint": ["no_color"]
        },
        "type_identification": {
            "text": [
                "What types of <o> are observable?",
                "For the <o>, what are their types?",
                "What types do <o> fall into?",
                "Can you list the types of <o>?",
                "Name the types of <o>.",
                "Identify the types of <o>.",
                "List the types of <o>.",
                "State the categories of <o>."
            ],
            "params": [
                "<o>"
            ],
            "end_filter": "extract_type",
            "constraint": ["no_type"]
        }
    },
    "dynamic":{
        "identify_stationary":{
            "text":[
                "Is the <o> stationary?",
                "Is the <o> parked?",
                "Is the <o> not moving?"
            ],
            "param":[
                "o"
            ],
            "end_filter":"is_stationary",
            "constraint":["unique"]
        },
        "motion_prediction": {
            "text": [
                "How will the <o> move in the future?",
                "What's the expected trajectory of <o>?"
            ],
            "param": [
                "o"
            ],
            "end_filter": "predict_trajectory",
            "constraint": []
        },
        "action_prediction": {
            "text": [
                "What action will <o> take? Turn left, turn right, or go straight?",
                "Choose one action that will likely be performed for <o>: turn left, turn right, and go straight"
            ],
            "param": [
                "o"
            ],
            "end_filter": "predict_turn",
            "constraint": []
        }
    }
}